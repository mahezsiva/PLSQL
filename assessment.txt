
-- create employee table

CREATE TABLE `user_db`.`myemp` (
  `Eno` INT NOT NULL,
  `Ename` VARCHAR(30) NOT NULL,
  `Deptno` VARCHAR(45) NOT NULL,
  `Esal` INT NOT NULL,
  PRIMARY KEY (`Eno`));

  use `user_db`;
  alter table myemp
  add experience int not null;
  
INSERT INTO `user_db`.`myemp` (`Eno`, `Ename`, `Deptno`, `Esal`, `experience`) VALUES ('1', 'mahesh', '10', '10000', '1');
INSERT INTO `user_db`.`myemp` (`Eno`, `Ename`, `Deptno`, `Esal`, `experience`) VALUES ('2', 'siva', '20', '0', '2');
INSERT INTO `user_db`.`myemp` (`Eno`, `Ename`, `Deptno`, `Esal`, `experience`) VALUES ('3', 'balaji', '30', '7000', '3');
INSERT INTO `user_db`.`myemp` (`Eno`, `Ename`, `Deptno`, `experience`) VALUES ('4', 'aswin', '40','6000', '4');
INSERT INTO `user_db`.`myemp` (`Eno`, `Ename`, `Deptno`, `Esal`, `experience`, `comm`) VALUES ('5', 'subro', '50', '1000', '5', '100');
-- update esal
update myemp 
set esal=null
where esal  BETWEEN 5000 AND 10000;
  
  -- aading new row of comm
ALTER TABLE `user_db`.`myemp` 
ADD COLUMN `comm` INT NULL AFTER `experience`;

-- created new table
CREATE TABLE `user_db`.`empcommnull` (
  `id` INT NOT NULL);

create table empcommnu like myemp;


Create table empcommnul
As (select*
From myemp
Where comm is null) ;


select *
from myemp;

create table ebill(cno number(4)primary key, cname varchar(30)not null , nounits number(4)not null, bamt number(8,2));


insert into ebill values(89,'karthi',50,null);
insert into ebill values(90,'ajay',55,null);
insert into ebill values(91,'akash',60,null);
insert into ebill values(92,'vinay',50,null);

select *
from ebill;
create procedure cal_bamt(in x varchar(10), out o decimal(8,2))
begin
declare done boolean default 0;
declare uits int(4);
declare amt_cur cursor for
select nounits from ebill where cno=x;
open amt_cur;
fetch amt_cur into uits;
if uits>200 then
set o=(uits-200)*1.5+150;
elseif uits>100 and uits<200 then
set o=(uits-100)*1.5+50;
else
set o=units*0.5;
end if;
close amt_cur;
update ebill set bamt=o where cno=x;
select * from ebill where cno=x;
end //


-- exception

Declare
A empid id% type := 5;
B  empname ename%type;
C empdep dep%type;
Begin 
Select name, dep Into A Empid,empdep
From emp
Where Id = empid;
Dbms ( 'name: || 'empname) ;
Dbms ('dep:= || 'empdep) ;
Exception
When no_data_found then

Dbms_output.put_line('no employees') ;
When others than  
Dbms_output.put_line('error') ;
End;




Declare
A empid eno% type := 7;
B  empname name%type;
C empdep deptno%type;
Begin 
Select name, dep Into A empid,empdep
From emp
Where Id = empid;
Dbms ( 'name: || 'empname) ;
Dbms ('dep:= || 'empdep) ;
Exception
When no_data_found then

Dbms_output.put_line('no employees') ;
When others than  
Dbms_output.put_line('error') ;
End;

DECLARE
           d_id depart.depart_id%type := 80;
           d_name depart.depart_name%type;
          d_mid depart.manager_id%type;
        BEGIN
           SELECT depart_id,depart_name,manager_id into d_id,d_name,d_mid from depart
           WHERE depart_id=d_id;
           DBMS_OUTPUT.PUT_LINE ('Dept Id: '|| d_id);
           DBMS_OUTPUT.PUT_LINE ('Dept Name: '|| d_name);
       DBMS_OUTPUT.PUT_LINE ('Manager Id: ' || d_mid);
        EXCEPTION
         WHEN no_data_found THEN
             raise_application_error (-20501,'no record. No such Record with Dept_Id =80!');
         WHEN others THEN
            dbms_output.put_line('Error!');
    END;
 


--trigger

CREATE OR REPLACE TRIGGER WEEKEND
BEFORE INSERT OR UPDATE OR DELETE on myemp 
  FOR EACH ROW
  DECLARE
  v_day DATE := TRUNC(SYSDATE);
  ex_invalid  EXCEPTION; 
  BEGIN
    IF TO_CHAR(v_day,'DY')IN ('sat','sun') THEN
       RAISE ex_invalid;
    END IF;
    EXCEPTION 
    WHEN ex_invalid THEN 
      RAISE_APPLICATION_ERROR(-20001,'Sorry Access on week-end days is denied');
  END;






